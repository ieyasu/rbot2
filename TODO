To Do
=====

 - use 'does not compute' as an error message
 - next searching in a web page
 - tack on javascript:parent.location='...' inside the href for pug's
   urlgrabber to fix ie referrer troubles
 - full-text search on urlgrabber
 - make timestamps anchors and links so that urls can be pasted into channel
   and will point to that vicinity of conversation
 - !domain ass2ass -> check all TLD's in order of popularity or something.
 - use URLs at http://xem.us/g/test-regex.php for testing pug
 - :bigfeh.com 433 * rb-test :Nickname is already in use.
 - <<< WHOIS rb-test
   >>> :bigfeh.com 451  WHOIS :Register first.
 - make '!next nick !smite nick' work
 - grab all of timecube's website, split into lines, randomize, cache

---
db: rbot:rbot/nofig7
buxus.atmos.colostate.edu
svn co svn://f3h.com/rbot/trunk/rbot/


\002 - bold
\003CC - color

Grabber
=======

- cookie-based sessions
- don't link mibbit.com quit shit in url-only view
- highlight contextified line when clicking on timestamp -> location in logs
- no time search doesn't necessarily go into present time (noticed at 12:49a mst)
  - works fine when search today -> tomorrow
- better date selection:
  - all time (default?)
  - latest
  - date range (with gui selector)


Different timestamps based on how long ago, not search span.  Also user-overridable.

[14:24:01]                  last 24 hours
[Tue 14:24]                 last week
[Tue Jun 05 14:24]          last month
[Jun 05 2012 14:24]         last year

[14:24]
[12\06\05-14:24:01] <joe>


Logging
=======

Stored in files log/#channel/YYYY-MM-DD-#channel.log.  The format varies by type of message:

PRIVMSG
        timestamp <nick> text
PRIVMSG ACTION
        timestamp * nick text
JOIN
        timestamp Join: nick
PART
        timestamp Part: nick
TOPIC
        timestamp Topic: nick topic
KICK
        timestamp Kick: kicker kickee why
MODE
        timestamp Mode: nick mode

NICK
        timestamp Nick: oldnick newnick
QUIT
        timestamp Quit: nick text


The timestamp is in ISO 8601 format, e.g. 2012-05-23T15:10:15Z so we don't run into any more DST issues.


Next Design
===========

Features:
 - if pattern matches account nick or account name, deliver to any nick
   owned by that account.
   - '-p' option: deliver to that nick pattern, not an account
   - '-n' option: deliver to that nick string, i.e. case-insensitive,
     whole-string match. (adds ^ and $ around nick, basically)

sarg's suggestions: don't add arguments; if the account matched is your own,
deliver to the nick pattern, otherwise to the matched account.  If no account
is matched, use old behavior.  allow <nick1>|<nick2> to deliver to both <nick1>
and <nick2>.  If multiple accounts are matched and not a '|' pattern, just
fall back on default behavior.

account deliveries have a list of valid nicks to deliver to;
nick deliveries have a single valid nick to deliver to; these could be
trivially combined. But what if a nick is added to an account? That may just 
be too bad...  Err, but account-nexts are to any one of the list of nicks and
not all.

Need to match to account first and uniq-ify the list.

Pattern deliveries work as now, except without the account crap.


Split on | in addition to , and ; but only when to ( ) present.

when <nick> talks, match <nick> to account and check against account nexts.
next, match <nick> against pattern recipeints.

three tables: 1. messages, 2. account recipients, 3. pattern recipients
And don't archive nexts.


; nick -> account -> list of account recips
select 
